{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/icon.js","webpack:///./src/components/emoji.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/toggle.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","react_spring__WEBPACK_IMPORTED_MODULE_2__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","BlogPage","_ref","data","props","useSpring","to","opacity","transform","from","a","createElement","title","className","div","style","allMarkdownRemark","edges","map","_ref2","node","key","id","frontmatter","path","date","m","module","exports","require","default","Icon","name","rests","_objectWithoutPropertiesLoose","react__WEBPACK_IMPORTED_MODULE_6___default","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_7__","Object","assign","icon","Emoji","symbol","label","rest","react__WEBPACK_IMPORTED_MODULE_5___default","role","aria-label","aria-hidden","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","React","createContext","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","ToggleBtn","react_default","padding","type","checked","onChange","e","onToggle","call","target","Layout","children","themeState","useTheme","_856328897","toggle","changeTheme","Date","getFullYear","emoji","href","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps"],"mappings":"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","file":"component---src-pages-blog-js-e5b893b79f5d0038ce35.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { animated, useSpring } from \"react-spring\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogPage = ({ data }) => {\n  const props = useSpring({\n    to: { opacity: 1, transform: \"translateX(0)\" },\n    from: { opacity: 0.1, transform: \"translateX(-100%)\" },\n  })\n  return (\n    <Layout>\n      <SEO title=\"Articles\" />\n      <div>\n        <Link to=\"/\" className=\"btn mb-4 self-start\">\n          back\n        </Link>\n        <Link to=\"/all-tags\" className=\"btn mb-4 self-start ml-2 text-gray-600\">\n          <span className=\"text-purple-700\">#</span> all tags\n        </Link>\n      </div>\n      <animated.div style={props}>\n        {data.allMarkdownRemark.edges.map(({ node }) => (\n          <div key={node.id}>\n            <Link\n              to={node.frontmatter.path}\n              className=\"flex flex-col lg:flex-row my-4 lg:items-center\"\n            >\n              <span className=\"text-sm text-gray-600 font-default order-3 lg:order-1\">\n                {node.frontmatter.date}\n              </span>\n              <span className=\"text-gray-600 h-full ml-3 mr-2 lg:border-l-2 lg:border-purple-800 order-1 lg:order-2\">\n                &nbsp;\n              </span>\n              <h1 className=\"btn-no-uppercase font-bold order-2 lg:order-3\">\n                {node.frontmatter.title}\n              </h1>\n            </Link>\n          </div>\n        ))}\n      </animated.div>\n    </Layout>\n  )\n}\n\nexport default BlogPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMM, YYYY\")\n            path\n            tags\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst Icon = ({ name, ...rests }) => <FontAwesomeIcon icon={name} {...rests} />\n\nexport default Icon\n","import React from \"react\"\n\nexport const Emoji = ({ symbol, label, ...rest }) => (\n  <span\n    role=\"img\"\n    aria-label={label ? label : \"\"}\n    aria-hidden={label ? false : true}\n    {...rest}\n  >\n    {symbol}\n  </span>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport Icon from \"./icon\"\n\nconst ToggleBtn = props => (\n  <label className=\"toggle-switch\" aria-label=\"theme toggle\">\n    <div\n      className=\"absolute flex justify-between w-full\"\n      style={{ padding: \"3px\" }}\n    >\n      <Icon name=\"moon\" className=\"text-yellow-500\" />\n      <Icon name=\"sun\" className=\"text-yellow-500\" />\n    </div>\n    <input\n      type=\"checkbox\"\n      className=\"h-0 w-0 appearance-none\"\n      checked={props.checked}\n      onChange={e => props.onToggle.call(null, e.target.checked)}\n    />\n    <span className=\"slider round\" />\n  </label>\n)\n\nexport default ToggleBtn\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport \"../css/default.css\"\nimport { useTheme } from \"../context/ThemeContext\"\nimport { Emoji } from \"./emoji\"\nimport ToggleBtn from \"./toggle\"\n\nconst Layout = ({ children }) => {\n  const themeState = useTheme()\n  const _data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className=\"flex min-h-screen flex-col w-full antialiased p-3 md:p-4 lg:p-6\">\n      <div className=\"absolute top-0 right-0 text-gray-600 m-4\">\n        <ToggleBtn\n          checked={themeState.checked}\n          onToggle={themeState.changeTheme}\n        />\n      </div>\n      <main className=\"flex flex-col flex-grow\">{children}</main>\n      <footer className=\"mt-auto text-gray-600 font-default leading-normal tracking-wide\">\n        © {new Date().getFullYear()}, Built with\n        <Emoji symbol=\"❤\" label=\"heart\" className=\"text-red-500 mx-1\" />, and{\" \"}\n        <a href=\"https://www.gatsbyjs.org\" className=\"btn-no-uppercase\">\n          Gatsby\n        </a>\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}